@using TXSTBXRD_UI.Utils.Libs

@inject Utils.ILocalStorage LocalStorage
@inject NavigationManager NavigationManager

<ul class="menu-main">
    <div class="auth-popup">
        <div class="auth-users">
            <div class="auth-profile"></div>
            <img src="/Resource/userAvatar.png" class="auth-users-img">
            <a class="auth-btn">ItRealRew</a>
        </div>

        <div class="auth-items">
            <div class="auth-item">
                <div class="item"></div>
                <img src="/Resource/projects.png" class="auth-item-img">
                <a class="auth-item-link">Projects</a>
            </div>
            <div class="auth-item">
                <div class="item"></div>
                <img src="/Resource/settings.png" class="auth-item-img">
                <a class="auth-item-link">Settings</a>
            </div>
            <div class="auth-item">
                <div class="item"></div>
                <img src="/Resource/guide.png" class="auth-item-img">
                <a class="auth-item-link" href="/useful">Support</a>
            </div>
            <div class="auth-item" @onclick="UserDeAuthorization">
                <div class="item"></div>
                <img src="/Resource/exit.png" class="auth-item-img">
                <a class="auth-item-link">Exit</a>
            </div>
        </div>
    </div>
</ul>


@code {
    bool userExists = false;

    [Parameter]
    public EventCallback<bool> onDeAuth { get; set; }
    private async void UserDeAuthorization()
    {
        await LocalStorage.RemoveAsync(RegularStorageName.AuthorizationToken);
        await onDeAuth.InvokeAsync(userExists);
    }
}